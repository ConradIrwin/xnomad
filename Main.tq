import "WindowManager"
import "Hotkeys"
import "JSON"

prefs = parseJSONFile("~/.xnomad")

wm = WindowManager new
wm defaultRatio    = prefs[#Ratio] || 0.7
wm windowsInMaster = prefs[#WindowsInMaster] || 1
wm reflow

mgr = HotkeyManager new
hotkeys = prefs[#Hotkeys]

if key = hotkeys[#SelectPrev] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm selectPreviousWindow: AccessibilityWindow frontMostWindow
        wm reflow
    }
}
if key = hotkeys[#SelectNext] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm selectNextWindow: AccessibilityWindow frontMostWindow
        wm reflow
    }
}

if key = hotkeys[#Swap] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        win = AccessibilityWindow frontMostWindow
        other = wm swapWithCounterpart: win
        other raise if (other frame)[0][0] > 10 \ If the other window was made primary
                                                \ then it makes sense to give it focus
        wm reflow
    }
}
if key = hotkeys[#SwapPrev] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm swapWithPreviousWindow: AccessibilityWindow frontMostWindow
        wm reflow
    }
}
if key = hotkeys[#SwapNext] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm swapWithNextWindow: AccessibilityWindow frontMostWindow
        wm reflow
    }
}

if key = hotkeys[#IncreaseRatio] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screen = AccessibilityWindow frontMostWindow screen
        space  = wm currentSpaceId
        wm setRatio: (wm ratioForScreen: screen space: space) + 0.05 forScreen: screen space: space
        wm reflow
    }
}

if key = hotkeys[#DecreaseRatio] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screen = AccessibilityWindow frontMostWindow screen
        space  = wm currentSpaceId
        wm setRatio: (wm ratioForScreen: screen space: space) - 0.05 forScreen: screen space: space
        wm reflow
    }
}

if key = hotkeys[#MoreMasters] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screen = AccessibilityWindow frontMostWindow screen
        space  = wm currentSpaceId
        wm setMaxMasters: (wm maxMastersOnScreen: screen space: space) + 1 onScreen: screen space: space
        wm reflow
    }
}

if key = hotkeys[#FewerMasters] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screen = AccessibilityWindow frontMostWindow screen
        space  = wm currentSpaceId
        wm setMaxMasters: (wm maxMastersOnScreen: screen space: space) - 1 onScreen: screen space: space
        wm reflow
    }
}

if key = hotkeys[#CycleLayouts] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm cycleLayouts; reflow
    }
}

if key = hotkeys[#FocusDisplay1] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screens = NSScreen screens
        if screens count >= 1 then wm focusOnScreen: screens[0]
    }
}
if key = hotkeys[#FocusDisplay2] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screens = NSScreen screens
        if screens count >= 2 then wm focusOnScreen: screens[1]
    }
}
if key = hotkeys[#FocusDisplay3] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screens = NSScreen screens
        if screens count >= 3 then wm focusOnScreen: screens[2]
    }
}

if key = hotkeys[#ToDisplay1] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screens = NSScreen screens
        if screens count >= 1 {
            wm moveWindow: AccessibilityWindow frontMostWindow toScreen: screens[0]
            wm reflow
        }
    }
}
if key = hotkeys[#ToDisplay2] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screens = NSScreen screens
        if screens count >= 2 {
            wm moveWindow: AccessibilityWindow frontMostWindow toScreen: screens[1]
            wm reflow
        }
    }
}
if key = hotkeys[#ToDisplay3] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        screens = NSScreen screens
        if screens count >= 3 {
            wm moveWindow: AccessibilityWindow frontMostWindow toScreen: screens[2]
            wm reflow
        }
    }
}

\ Space shortcuts are not enabled by default because they aren't perfect yet.
\ (You can use TotalSpaces if you want to disable the switching animation; that's what I do)
if key = hotkeys[#Space1] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 0
        wm reflow
    }
}
if key = hotkeys[#Space2] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 1
        wm reflow
    }
}
if key = hotkeys[#Space3] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 2
        wm reflow
    }
}
if key = hotkeys[#Space4] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 3
        wm reflow
    }
}
if key = hotkeys[#Space5] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 4
        wm reflow
    }
}
if key = hotkeys[#Space6] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 5
        wm reflow
    }
}
if key = hotkeys[#Space7] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 6
        wm reflow
    }
}
if key = hotkeys[#Space8] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 7
        wm reflow
    }
}
if key = hotkeys[#Space9] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm switchToSpace: 8
        wm reflow
    }
}
if key = hotkeys[#ToSpace1] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm moveWindow: AccessibilityWindow frontMostWindow toSpace: 0
    }
}
if key = hotkeys[#ToSpace2] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm moveWindow: AccessibilityWindow frontMostWindow toSpace: 1
    }
}
if key = hotkeys[#ToSpace3] {
    mgr registerHotkey: key[#key] withModifiers: key[#modifiers] handler: {
        wm moveWindow: AccessibilityWindow frontMostWindow toSpace: 2
    }
}
NSApplication sharedApplication run
